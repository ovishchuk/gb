/*
    1. Написать программу, вычисляющую выражение a * (b + (c / d)) и выводящую
    результат с плавающей точкой, где a, b, c, d – целочисленные константы. 
    Используйте static_cast или С-Style cast к float чтобы выполнить точное 
    деление.
    2. Дано целое число. Если оно меньше или равно 21, то выведите на экран 
    разницу между этим числом и числом 21. Если же заданное число больше, 
    чем 21, необходимо вывести удвоенную разницу между этим числом и 21. При 
    выполнении задания следует использовать тернарный оператор (?:).
    3. * Описать трёхмерный целочисленный массив, размером 3х3х3 и указатель на 
    значения внутри массива и при помощи операции разыменования вывести на экран
    значение центральной ячейки получившегося куба [1][1][1].
    4. ** Написать программу, вычисляющую выражение из первого задания, а 
    переменные для неё объявлены и инициализировать в другом cpp файле. 
    Используйте extern.
*/
#include <iostream>

// задания 1 и 4, переменные объявлены и инициализированы в source.cpp
extern int a;
extern int b;
extern int c;
extern int d;

int main()
{
    // вывести значения переменных (для наглядности)
    std::cout << "a: " << a << std::endl;
    std::cout << "b: " << b << std::endl;
    std::cout << "c: " << c << std::endl;
    std::cout << "d: " << d << std::endl;

    // задания 1 и 4
    // формула: a * ( b + ( c / d ) )
    std::cout << "\nResult: " << ( a * ( b + ( static_cast<float>(c) / d ) ) ) 
        << std::endl;

    // задание 2
    int num = 0;
    std::cout << "\nEnter number: ";
    std::cin >> num;

    num <= 21 
        ? ( std::cout << ( 21 - num ) ) 
        : ( std::cout << ( ( num - 21 ) * 2 ) );
    std::cout << std::endl;

    // задание 3
    int arr[3][3][3] = {
        {
            { -20, 4, 9 },
            { 14, -45, 1 },
            { 19, 6, -42 }
        },
        {
            { -66, 12, 10 },
            { 441, 7, 2 },
            { 76, -254, 81 }
        },
        {
            { 512, 11, -40 },
            { -8, 716, 3 },
            { 340, 5, -967 }
        }
    };

    int *pArr = &arr[1][1][1];

    std::cout << "\narr[1][1][1] value is: " << *pArr << std::endl;

    return 0;
}